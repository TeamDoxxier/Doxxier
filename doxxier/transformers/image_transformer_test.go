package transformers

import (
	"encoding/base64"
	"testing"

	"doxxier.tech/doxxier/pkg/models"
	"github.com/stretchr/testify/assert"
)

func TestConvertJpegToAvif(t *testing.T) {
	data, _ := base64.StdEncoding.DecodeString("/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCABkAGQDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDxyiiiv3E8wKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA//Zâ€‹")

	ctx := &models.DoxxierPart{
		Content: data,
	}
	transfomer := &ImageTransformer{}
	transformError := transfomer.Transform(ctx)

	assert.Nil(t, transformError)
}

func TestConvertPngToAvif(t *testing.T) {
	data, _ := base64.StdEncoding.DecodeString("iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAIAAACRXR/mAAAAS0lEQVR4nO3OsQEAEADAMFzudA9YOjEkF2SOPT60XgfutAqtQqvQKrQKrUKr0Cq0Cq1Cq9AqtAqtQqvQKrQKrUKr0Cq0Cq1Cq9AqDp9GAOQOqaRAAAAAAElFTkSuQmCC")

	ctx := &models.DoxxierPart{
		Content: data,
	}
	transfomer := &ImageTransformer{}
	transformError := transfomer.Transform(ctx)

	assert.Nil(t, transformError)
}

func TestConvertHeifToAvif(t *testing.T) {
	data, _ := base64.StdEncoding.DecodeString("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")

	ctx := &models.DoxxierPart{
		Content: data,
	}
	transfomer := &ImageTransformer{}
	transformError := transfomer.Transform(ctx)

	assert.Nil(t, transformError)
}
